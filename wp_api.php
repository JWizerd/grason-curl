<?php  

/**
 * @author 02.09.2018 Jeremiah Wodke <[<jeremiah.wodke@madwiremedia.com>]> 
 */

class Curl_Handler 
{

  protected $user_key;
  protected $url;
  protected $headers = [];

  /**
   * @return [set initial values for API request]
   */

  public function __construct($user_key, $username = null, $password = null)  {

    $this->user_key = $user_key;
    $this->username = $username;
    $this->password = $password;

  }

  public function set_content_type($type) {
    array_push($this->headers, 'Content-Type:application/' . $type);
  }

  public function set_auth($type) {
    if ($type == 'basic') {
      array_push($this->headers, 'Authorization: Basic '. base64_encode($this->username . ':' . $this->password));  
    }
  }

  public function request($url, $endpoint, $headers) {

    $ch = curl_init();

    curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);
    curl_setopt($ch, CURLOPT_URL, $url);
    curl_setopt($ch, CURLOPT_POST, true);
    curl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query($endpoint, '', '&'));
    curl_setopt($ch, CURLOPT_TIMEOUT, 30); //timeout after 30 seconds
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);

    $response = curl_exec ($ch);
    $status_code = curl_getinfo($ch, CURLINFO_HTTP_CODE); //get status code
    curl_close ($ch);

    return $response;

  }

}

class Org extends Curl_Handler 
{

  protected $username = 'grasons';
  protected $password = 'DgR7s253iSui3yFwmwcyGqH5tGNeJb';
  protected $base_url = 'https://estatesales.org/api/v2'; 
  protected $timezone = 'US/Central';
  protected $address;
  protected $city;
  protected $postal_code;
  protected $state_code;

  public function __construct($user_key, $address, $city, $postal_code, $state_code)  {

    $this->user_key    = $user_key;
    $this->address     = $address;
    $this->city        = $city;
    $this->postal_code = $postal_code;
    $this->state_code  = $state_code;
    $this->set_base_query();

  }

  private function set_base_query() {

    $this->base_query = [
          'user_key' => $this->user_key,
          'address'  => $this->address,
          'city'     => $this->city,
          'state_code' => $this->state_code,
          'postal_code' => $this->postal_code
        ];

  }

  /**
   * [for estatesales.org ONLY. Used to POST listings based from GPS coordinates to specify a specific ]
   * @param  
   * @return json response 
   * https://estatesales.org/api/v2/geocode/get
   */
  public function get_coordinates() {

    $geocode_url = $this->base_url . '/geocode/get';

    return json_decode($this->request($geocode_url, $this->base_query, $this->headers));

  }

  /**
   * [set the locations coordinates from the cURL response get_coordinates()]
   */
  private function set_coordinates() {

    $coords = $this->get_coordinates();

    $this->lat = $coords->location->lat;
    $this->lon = $coords->location->lon;

  }

  private function set_listing_id($id) {
    $this->listing_id = $id;
  }

  public function get_listing_id() {
    return $this->listing_id;
  }

  /**
   * @param Associative Array of Params
   * @return [type] [description]
   */
  private function build_endpoint($params) {

    $endpoint = $this->base_query;
    
    // Push values to endpoint storing base_query
    foreach ($params as $key => $value) {
      $endpoint[$key] = $value;
    }

    return $endpoint;

  }

  /**
   * https://estatesales.org/api/v2/sale/set
   */
  public function post_listing() {

    $url = $this->base_url . '/sale/set';

    $this->set_coordinates();

    $params = [
      'type' => 'traditional',
      'lat' => $this->lat,
      'lon' => $this->lon, 
      'descr' => 'test description', 
      'title' => 'TESTING ACF POST FIELDS 2',
      'timezone' => $this->timezone, 
      'dates' => json_encode(
        [ 
          '2018-02-13' => ["10:30"],  
          '2018-04-01' => ["16:00"]
        ]
      )
    ];

    $endpoint = $this->build_endpoint($params);
    $listing = json_decode($this->request($url, $endpoint, $this->headers));

    $this->set_listing_id($listing->sale->id);

    $this->publish_listing($listing->sale->id);
    
  }

  /**
   * [publish_listing on estatesales.org. You can remove a listing by firing another API request to the sale and setting publish=false]
   * @param  [int] $listing_id [id generated by post_listing() api response]
   * @return response whether listing was properly published or not
   * https://estatesales.org/api/v2/sale/publish/set
   */
  private function publish_listing($listing_id) {

    $url = $this->base_url . '/sale/publish/set';

    $params = [

      'id' => $listing_id,
      'publish' => true

    ];

    $endpoint = $this->build_endpoint($params);
    $response = json_decode($this->request($url, $endpoint, $this->headers));

    print_r($response);

  }

  /**
   * [post an image to the estatesales.org account]
   * @return [respsone obj]
   */
  protected function post_images($images_arr) {

    $url = $this->base_url . '/sale/photo/remote/add';

    if (count($images_arr) > 0) {

      foreach ($images_arr as $image) {

        $params = [
          'id' => $this->listing_id,
          'url' => $image['url']
        ];
        
        $endpoint = $this->build_endpoint($params);
        $response = json_decode($this->request($url, $endpoint, $this->headers));

      }
      
    }

  }

}


// Run the API Calls Upon Estate Sale Custom Post Type CREATION OR DELETION
add_action( 'transition_post_status', 'post_estate_sale_to_apis', 10, 3 );

function post_estate_sale_to_apis( $new_status, $old_status, $post ) { 

  if ($old_status == 'auto-draft' && $new_status == 'publish' && $post->post_type == 'estatesales') {

    $fields = $_POST['acf'];
    $title    = get_the_title($post->ID);
    $address  = $fields['field_5a69f982b7d3a'];
    $account  = $fields['field_5a83313334dc9'];
    $city     = $fields['field_5a69f998b7d3b'];
    $state    = $fields['field_5a8332d3fb503'];
    $zipcode  = $fields['field_5a833310fb504'];
    $timezone = $fields['field_5a833d1c1c319'];
    $descr    = $fields['field_5a8330f0e668a'];
    $dates    = $fields['field_5a69f9e9b7d3c'];
    // the images post field returns the id for the media item so use get_media_item to get post thumbnail url
    $images   = $fields['field_5a69fa731c0b6'];

    $org = new Org($account, $address, $city, $zipcode, $state);

    // $org = new Org('5749-0950-0d1d-4c13-9ed8-6154', '18308 Wind Valley Way', 'Pflugerville', '78660', 'TX');

    $org->set_content_type('x-www-form-urlencoded');
    $org->set_auth('basic');
    $org->post_listing();

  }
}

/**
 * Galery Data
 * (
    [0] => Array
        (
            [gallery_image] => Array
                (
                    [ID] => 217
                    [id] => 217
                    [title] => cta-relocation
                    [filename] => cta-relocation.jpg
                    [url] => http://localhost:8888/grason-curl-wp/wp-content/uploads/2018/01/cta-relocation.jpg
                    [alt] => 
                    [author] => 1
                    [description] => 
                    [caption] => 
                    [name] => cta-relocation
                    [date] => 2018-01-05 16:11:31
                    [modified] => 2018-02-14 22:24:33
                    [mime_type] => image/jpeg
                    [type] => image
                    [icon] => http://localhost:8888/grason-curl-wp/wp-includes/images/media/default.png
                    [width] => 666
                    [height] => 700
                    [sizes] => Array
                        (
                            [thumbnail] => http://localhost:8888/grason-curl-wp/wp-content/uploads/2018/01/cta-relocation-150x150.jpg
                            [thumbnail-width] => 150
                            [thumbnail-height] => 150
                            [medium] => http://localhost:8888/grason-curl-wp/wp-content/uploads/2018/01/cta-relocation-285x300.jpg
                            [medium-width] => 285
                            [medium-height] => 300
                            [medium_large] => http://localhost:8888/grason-curl-wp/wp-content/uploads/2018/01/cta-relocation.jpg
                            [medium_large-width] => 666
                            [medium_large-height] => 700
                            [large] => http://localhost:8888/grason-curl-wp/wp-content/uploads/2018/01/cta-relocation.jpg
                            [large-width] => 666
                            [large-height] => 700
                            [estate_img_thumbnail] => http://localhost:8888/grason-curl-wp/wp-content/uploads/2018/01/cta-relocation-400x400.jpg
                            [estate_img_thumbnail-width] => 400
                            [estate_img_thumbnail-height] => 400
                            [estate_full_size] => http://localhost:8888/grason-curl-wp/wp-content/uploads/2018/01/cta-relocation.jpg
                            [estate_full_size-width] => 666
                            [estate_full_size-height] => 700
                        )

                )

        )

)
 */

/**
 * Date Format
 * (
    [0] => Array
        (
            [sale_date_picker] => 2018-02-15
            [sale_date_start_time] => 01:00:00
            [sale_date_end_time] => 03:00:00
        )

)
 */